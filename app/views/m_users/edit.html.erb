<style>
  .content {
    padding-bottom: 100px;
  }
</style>

<div class="container-fluid px-5 content">
  <div class="row">
    <div class="col-6">
      <div class="test">
        <h3>プロファイル編集</h3>
        
        <%= form_with model: @m_user, url: m_user_path(@m_user), method: :patch, local: true do |form| %>
          <!-- Name -->
          <div class="mb-2">
            <%= form.label :name, "ユーザー名", class: "form-label mb-0" %>
            <%= form.text_field :name, class: "form-control" %>
          </div>

          <!-- Phone -->
          <div class="mb-2">
            <%= form.label :phone, "電話番号", class: "form-label mb-0" %>
            <%= form.telephone_field :phone, class: "form-control" %>
          </div>

          <!-- Job Type (Category) -->
          <div class="mb-2">
            <%= form.label :category_id, "職種", class: "form-label mb-0" %>
            <%= form.select :category_id, 
                            options_for_select(@categories.map { |category| [category.title, category.id] }, @m_user.category_id), 
                            { prompt: "職種を選択してください" },
                            { class: "form-select" } %>
          </div>

          <!-- Skills Dropdown -->
          <div class="mb-2">
            <label class="form-label mb-0">スキル</label>
            <div class="dropdown">
              <button id="skillsDropdownButton" class="w-100 btn border border-dark dropdown-toggle d-flex justify-content-between align-items-center" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                <span id="badgeContainer">選択してください</span>
              </button>

              <ul class="dropdown-menu p-2" aria-labelledby="skillsDropdownButton">
                <% @skills.each do |skill| %>
                  <li class="form-check">
                    <%= check_box_tag "m_user[t_skill_ids][]", skill.id, @m_user.t_skills.map(&:id).include?(skill.id), class: "form-check-input skill-checkbox", id: "skill_#{skill.id}", data: { skill_name: skill.title } %>
                    <%= label_tag "skill_#{skill.id}", skill.title, class: "form-check-label" %>
                  </li>
                <% end %>
              </ul>
            </div>
          </div>

          <!-- Self-Introduction -->
          <div class="mb-2">
            <%= form.label :about, "自己紹介", class: "form-label mb-0" %>
            <%= form.text_area :about, class: "form-control", rows: 1 %>
          </div>

          <!-- Location -->
          <div class="mb-2">
            <%= form.label :location_id, "市区町村", class: "form-label mb-0" %>
            <%= form.select :location_id,
                            options_for_select(@locations.map { |location| [location.city, location.id] }, @m_user.location_id),
                            { prompt: '選択してください' }, class: "form-select" %>
          </div>

          <!-- Profile Image -->
          <div class="mb-3 d-flex flex-column justify-content-center">
            <%= form.label :profile_picture, "プロフィール画像", class: "form-label mb-0" %>
            <% if @m_user.profile_picture.attached? %>
              <%= image_tag @m_user.profile_picture, id: "profile-picture-preview", class: "img-thumbnail rounded mb-3", style: "width: 150px; height: 150px; object-fit: cover;" %>
            <% else %>
              <%= image_tag "default_profile.png", id: "profile-picture-preview", class: "img-thumbnail rounded mb-3", style: "width: 150px; height: 150px; object-fit: cover;" %>
            <% end %>

            <%= form.file_field :profile_picture, class: "form-control", direct_upload: true, id: "m_user_profile_picture" %>
          </div>

          <!-- Submit Button -->
          <div class="d-flex justify-content-start">
            <%= form.submit "更新", class: "btn btn-success" %>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
  const fileInput = document.querySelector('#m_user_profile_picture');
  const previewImage = document.querySelector('#profile-picture-preview');

  fileInput.addEventListener('change', function (event) {
    const file = event.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = function (e) {
        previewImage.src = e.target.result;
        previewImage.style.display = 'block';
      };
      reader.readAsDataURL(file);
    }
  });

  // Skill Selection Logic
  const button = document.getElementById("skillsDropdownButton");
  button.innerHTML = ""; // Clear previous content

  const leftContainer = document.createElement("div");
  leftContainer.id = "badgeContainer";
  leftContainer.textContent = "選択してください"; // Default text

  const rightContainer = document.createElement("span");

  button.classList.add("d-flex", "justify-content-between", "align-items-center");
  button.appendChild(leftContainer);
  button.appendChild(rightContainer);

  function updateBadgeContainer() {
    const badgeContainer = document.getElementById("badgeContainer");
    const checkboxes = document.querySelectorAll(".skill-checkbox");
    let selected = [];

    checkboxes.forEach(cb => {
      if (cb.checked) {
        const label = document.querySelector(`label[for="${cb.id}"]`);
        if (label) {
          selected.push({ id: cb.id, text: label.textContent.trim() });
        }
      }
    });

    if (selected.length > 0) {
      badgeContainer.innerHTML = selected.map(skill => {
        return `
          <span class="badge bg-primary me-1 p-2">
            ${skill.text} 
            <span class="ms-1 text-white fw-bold remove-skill" data-skill-id="${skill.id}" style="cursor:pointer;">×</span>
          </span>
        `;
      }).join(" ");
    } else {
      badgeContainer.textContent = "選択してください";
    }

    // Add event listeners to remove skill when clicking "×"
    document.querySelectorAll(".remove-skill").forEach(btn => {
      btn.addEventListener("click", function (e) {
        e.stopPropagation(); // Prevent the dropdown from closing
        const skillId = this.getAttribute("data-skill-id");
        const checkbox = document.getElementById(skillId);
        if (checkbox) {
          checkbox.checked = false; // Uncheck the checkbox
        }
        updateBadgeContainer(); // Refresh the displayed badges
      });
    });
  }

  // Listen for changes in checkboxes
  document.querySelectorAll(".skill-checkbox").forEach(cb => {
    cb.addEventListener("change", updateBadgeContainer);
  });

  updateBadgeContainer();
});

</script>